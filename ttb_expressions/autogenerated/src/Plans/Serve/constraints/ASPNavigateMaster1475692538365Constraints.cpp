#include "Plans/Serve/constraints/ASPNavigateMaster1475692538365Constraints.h"
/*PROTECTED REGION ID(ch1475692538365) ENABLED START*/
// Add additional using directives here
#include <reasoner/asp/Enums.h>
#include <reasoner/asp/Solver.h>
#include <asp_solver_wrapper/ASPSolverWrapper.h>
#include <asp_solver_wrapper/ASPTerm.h>
#include <engine/AlicaEngine.h>
#include <engine/constraintmodul/ProblemDescriptor.h>
#include <alica_solver_interface/SolverTerm.h>
#include <memory>
#include <ttb/TTBWorldModel.h>
/*PROTECTED REGION END*/

using std::cout;
using std::exception;
using std::make_shared;
using namespace alica;

namespace alicaAutogenerated
{
// Plan:ASPNavigateMaster
/*
 * Tasks:
 * - EP:1475692538367 : DefaultTask (1414681164704)
 *
 * States:
 * - Navigate (1475692538366)
 * - Stop (1476366084811)
 *
 * Vars:
 * - NavMasterVar (1475698052801)
 */
/*
 * RuntimeCondition - (Name): NewRuntimeCondition
 * (ConditionString):
 * Static Variables: NavMasterVar
 * Domain Variables:
 *
 */
void Constraint1475692986360::getConstraint(shared_ptr<ProblemDescriptor> c, shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(cc1475692986360) ENABLED START*/
    ttb::TTBWorldModel* wm = ttb::TTBWorldModel::get();
    auto constraint = new alica::reasoner::ASPTerm(-1);
    // The query id has to be added to any predicate which is added to the program, naming ruleheads and facts!
    auto queryId = ((alica::reasoner::ASPSolverWrapper*) wm->getEngine()->getSolver<alica::reasoner::ASPSolverWrapper>())->getQueryCounter();
    constraint->setQueryId(queryId);
    std::stringstream ss;
    ss << "goalReachable(X) :- reachable(X, Y), goal(X), start(Y), room(X), room(Y).";
    constraint->setQueryRule(ss.str());
    ss.str("");
    //        ss << "multiRuleWorks(X, " << queryId << ") :- goal(r1405B, " << queryId << "), room(X).";
    //        constraint->addRule(ss.str());
    //        ss.str("");
    ss << "goal(r1405B).";
    constraint->addFact(ss.str());
    ss.str("");
    ss << "start(r1411).";
    constraint->addFact(ss.str());
    constraint->setProgramSection("distributedSystemsRoomsExternal");
    constraint->setType(::reasoner::asp::QueryType::Extension);
    constraint->setId(1475692986360);
    // TODO fix after adding asp to topological model
    //        constraint->setExternals(wm->doors.getDoors());
    c->setConstraint(constraint);
    /*PROTECTED REGION END*/
}

// State: Navigate
// State: Stop
} // namespace alicaAutogenerated
