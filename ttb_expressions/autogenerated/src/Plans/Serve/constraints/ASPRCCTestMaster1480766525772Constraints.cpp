#include "Plans/Serve/constraints/ASPRCCTestMaster1480766525772Constraints.h"
using namespace std;
using namespace alica;
/*PROTECTED REGION ID(ch1480766525772) ENABLED START*/
#include <alica_asp_solver/ASPTerm.h>
#include <alica_asp_solver/ASPSolver.h>
#include <alica_asp_solver/ASPQueryType.h>
#include <SolverType.h>
#include <engine/AlicaEngine.h>
#include "engine/constraintmodul/SolverTerm.h"
#include "engine/constraintmodul/ConstraintDescriptor.h"
#include <memory>
#include "TTBWorldModel.h"
//Add additional using directives here
/*PROTECTED REGION END*/

namespace alicaAutogenerated
{
    //Plan:ASPRCCTestMaster

    /*		
     * Tasks: 
     * - EP:1480766525774 : DefaultTask (1414681164704)
     *
     * States:
     * - NewState (1480766525773)
     * - Succ (1480766535708)
     *
     * Vars:				
     * - PlanVar (1480766663869) 
     */

    /*
     * RuntimeCondition - (Name): NewRuntimeCondition
     * (ConditionString): 
     * Static Variables: [PlanVar]
     * Domain Variables:

     */
    void Constraint1480766551805::getConstraint(shared_ptr<ConstraintDescriptor> c, shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(cc1480766551805) ENABLED START*/
        ttb::TTBWorldModel* wm = ttb::TTBWorldModel::get();
        auto constraint = make_shared<alica::reasoner::ASPTerm>();
        //The query id has to be added to any predicate which is added to the program, naming ruleheads and facts!
        auto queryId = ((alica::reasoner::ASPSolver*)wm->getEngine()->getSolver(SolverType::ASPSOLVER))->getQueryCounter();
        constraint->setQueryId(queryId);
        stringstream ss;
        ss << "goalReachable(X, " << queryId << ") :- reachable(X, Y), goal(X, ";
        ss << queryId << "), start(Y, "  << queryId << "), room(X), room(Y).";
        constraint->setRule(ss.str());
        ss.str("");
        ss << "goal(100, " << queryId << ").";
        constraint->addFact(ss.str());
        ss.str("");
        ss << "start(0, " << queryId << ").";
        constraint->addFact(ss.str());
        constraint->setProgramSection("asprccgen");
        constraint->setType(alica::reasoner::ASPQueryType::Variable);
        constraint->setId(1480766551805);
        c->setConstraint(dynamic_pointer_cast < alica::SolverTerm > (constraint));
        /*PROTECTED REGION END*/
    }

// State: NewState

// State: NewState

// State: Succ

// State: Succ

}
