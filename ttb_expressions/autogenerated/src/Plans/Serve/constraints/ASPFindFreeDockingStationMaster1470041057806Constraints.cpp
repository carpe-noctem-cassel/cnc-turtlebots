#include "Plans/Serve/constraints/ASPFindFreeDockingStationMaster1470041057806Constraints.h"
/*PROTECTED REGION ID(ch1470041057806) ENABLED START*/
#include <ttb/TTBWorldModel.h>

#include <asp_commons/ASPQueryType.h>
#include <asp_commons/IASPSolver.h>
#include <asp_solver_wrapper/ASPSolverWrapper.h>
#include <asp_solver_wrapper/ASPTerm.h>

#include <SolverType.h>
#include <engine/AlicaEngine.h>
#include <engine/constraintmodul/ProblemDescriptor.h>
#include <engine/constraintmodul/SolverTerm.h>

#include <memory>
/*PROTECTED REGION END*/

using std::exception;
using std::make_shared;
using std::cout;
using namespace alica;

namespace alicaAutogenerated
{
// Plan:ASPFindFreeDockingStationMaster
/*
* Tasks:
* - EP:1470041057809 : DefaultTask (1414681164704)
*
* States:
* - SearchForFreeDockingStation (1470041057808)
* - Charge (1470041204046)
* - NewSuccessState (1470042244415)
*
* Vars:
* - DockingStationVar (1470043579268)
*/
/*
* RuntimeCondition - (Name): NewRuntimeCondition
* (ConditionString):
* Static Variables: DockingStationVar
* Domain Variables:
*
*/
void Constraint1470042926317::getConstraint(shared_ptr<ProblemDescriptor> c, shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(cc1470042926317) ENABLED START*/
    ttb::TTBWorldModel *wm = ttb::TTBWorldModel::get();
    auto constraint = make_shared<alica::reasoner::ASPTerm>();
    // The query id has to be added to any predicate which is added to the program, naming ruleheads and facts!
    auto queryId =
        ((alica::reasoner::ASPSolverWrapper *)wm->getEngine()->getSolver(SolverType::ASPSOLVER))->getQueryCounter();
    constraint->setQueryId(queryId);
    stringstream ss;
    ss << "freeDockingStation(X, " << queryId << ") :- poi(X), dockingStation(X, ";
    ss << queryId << "), not occupied(X, Y,  " << queryId << ") : agent(Y , " << queryId << ").";
    constraint->setQueryRule(ss.str());
    ss.str("");
    ss << "dockingStation(studentLab1, " << queryId << ").";
    constraint->addFact(ss.str());
    ss.str("");
    ss << "dockingStation(kicker, " << queryId << ").";
    constraint->addFact(ss.str());
    ss.str("");
    ss << "agent(donatello, " << queryId << ").";
    constraint->addFact(ss.str());
    ss.str("");
    ss << "occupied(kicker, donatello, " << queryId << ").";
    constraint->addFact(ss.str());
    ss.str("");
    constraint->setProgramSection("distributedSystemsRooms");
    constraint->setType(::reasoner::ASPQueryType::Variable);
    constraint->setId(1470042926317);
    c->setConstraint(dynamic_pointer_cast<alica::SolverTerm>(constraint));
    /*PROTECTED REGION END*/
}

// State: SearchForFreeDockingStation
// State: Charge
// State: NewSuccessState
}
