#include "Plans/Serve/constraints/ASPMinimizePathMaster1477125857343Constraints.h"
using namespace std;
using namespace alica;
/*PROTECTED REGION ID(ch1477125857343) ENABLED START*/
//Add additional using directives here
#include <asp_commons/ASPCommonsTerm.h>
#include <asp_commons/IASPSolver.h>
#include <asp_commons/ASPQueryType.h>
#include <asp_solver_wrapper/ASPSolverWrapper.h>
#include <SolverType.h>
#include <engine/AlicaEngine.h>
#include "engine/constraintmodul/SolverTerm.h"
#include <engine/constraintmodul/ProblemDescriptor.h>
#include <memory>
#include "TTBWorldModel.h"
#include <memory>
/*PROTECTED REGION END*/

namespace alicaAutogenerated
{
    //Plan:ASPMinimizePathMaster

    /*		
     * Tasks: 
     * - EP:1477125857346 : DefaultTask (1414681164704)
     *
     * States:
     * - Minimize (1477125857344)
     *
     * Vars:				
     * - PlanVar (1477125989168) 
     */

    /*
     * RuntimeCondition - (Name): NewRuntimeCondition
     * (ConditionString): 
     * Static Variables: [PlanVar]
     * Domain Variables:

     */
    void Constraint1477125906086::getConstraint(shared_ptr<ProblemDescriptor> c, shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(cc1477125906086) ENABLED START*/
        ttb::TTBWorldModel* wm = ttb::TTBWorldModel::get();
        auto constraint = make_shared<::reasoner::ASPCommonsTerm>();
        //The query id has to be added to any predicate which is added to the program, naming ruleheads and facts!
        auto queryId = ((alica::reasoner::ASPSolverWrapper*)wm->getEngine()->getSolver(SolverType::ASPSOLVER))->getQueryCounter();
        constraint->setQueryId(queryId);
        stringstream ss;
        ss << "goalReachable(1, 15, " << queryId << ") :- adj(1, 15, X), ix(X).";
        constraint->addRule(ss.str());
        constraint->setNumberOfModels("1");
        constraint->setProgramSection("pathMinimize");
        constraint->setType(::reasoner::ASPQueryType::Variable);
        constraint->setId(1477125906086);
        c->setConstraint(dynamic_pointer_cast < alica::SolverTerm > (constraint));
        /*PROTECTED REGION END*/
    }

// State: Minimize

// State: Minimize

}
