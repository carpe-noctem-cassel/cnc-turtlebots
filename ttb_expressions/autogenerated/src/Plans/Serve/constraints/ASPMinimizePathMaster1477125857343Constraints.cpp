#include "Plans/Serve/constraints/ASPMinimizePathMaster1477125857343Constraints.h"
/*PROTECTED REGION ID(ch1477125857343) ENABLED START*/
// Add additional using directives here
#include <ttb/TTBWorldModel.h>

#include <asp_commons/ASPCommonsTerm.h>
#include <asp_commons/ASPQueryType.h>
#include <asp_commons/IASPSolver.h>
#include <asp_solver_wrapper/ASPSolverWrapper.h>

#include <engine/AlicaEngine.h>
#include <engine/constraintmodul/ProblemDescriptor.h>
#include <alica_solver_interface/SolverTerm.h>

#include <memory>
/*PROTECTED REGION END*/

using std::cout;
using std::exception;
using std::make_shared;
using namespace alica;

namespace alicaAutogenerated
{
// Plan:ASPMinimizePathMaster
/*
 * Tasks:
 * - EP:1477125857346 : DefaultTask (1414681164704)
 *
 * States:
 * - Minimize (1477125857344)
 *
 * Vars:
 * - PlanVar (1477125989168)
 */
/*
 * RuntimeCondition - (Name): NewRuntimeCondition
 * (ConditionString):
 * Static Variables: PlanVar
 * Domain Variables:
 *
 */
void Constraint1477125906086::getConstraint(shared_ptr<ProblemDescriptor> c, shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(cc1477125906086) ENABLED START*/
    ttb::TTBWorldModel* wm = ttb::TTBWorldModel::get();
    auto constraint = new ::reasoner::ASPCommonsTerm();
    // The query id has to be added to any predicate which is added to the program, naming ruleheads and facts!
    auto queryId = ((alica::reasoner::ASPSolverWrapper*) wm->getEngine()->getSolver<alica::reasoner::ASPSolverWrapper>())->getQueryCounter();
    constraint->setQueryId(queryId);
    std::stringstream ss;
    ss << "goalReachable(1, 15, " << queryId << ") :- adj(1, 15, X), ix(X).";
    constraint->setQueryRule(ss.str());
    constraint->setNumberOfModels("1");
    constraint->setProgramSection("pathMinimize");
    constraint->setType(::reasoner::ASPQueryType::Extension);
    constraint->setId(1477125906086);
    c->setConstraint(reinterpret_cast<SolverTerm*>(constraint));
    /*PROTECTED REGION END*/
}

// State: Minimize
} // namespace alicaAutogenerated
