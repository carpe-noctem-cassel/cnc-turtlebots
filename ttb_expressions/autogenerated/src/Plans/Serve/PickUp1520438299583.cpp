#include "Plans/Serve/PickUp1520438299583.h"
using namespace alica;
/*PROTECTED REGION ID(eph1520438299583) ENABLED START*/ //Add additional using directives here
#include <robot/SimulatedArm.h>
#include <TurtleBot.h>

#include <ttb/wm/TaskManager.h>
#include <ttb/TTBWorldModel.h>
/*PROTECTED REGION END*/
namespace alicaAutogenerated
{
    //Plan:PickUp

    //Check of RuntimeCondition - (Name): NewRuntimeCondition, (ConditionString): , (Comment) :  

    /* 
     * Available Vars:
     *	- entity (1520438389375)
     */
    bool RunTimeCondition1520438401434::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1520438401434) ENABLED START*/
        return true;
        /*PROTECTED REGION END*/
    }

    /* generated comment
     
     Task: Fetch  -> EntryPoint-ID: 1520438315110

     */
    shared_ptr<UtilityFunction> UtilityFunction1520438299583::getUtilityFunction(Plan* plan)
    {
        /*PROTECTED REGION ID(1520438299583) ENABLED START*/

        shared_ptr < UtilityFunction > defaultFunction = make_shared < DefaultUtilityFunction > (plan);
        return defaultFunction;

        /*PROTECTED REGION END*/
    }

    //State: DriveToPickUpPos in Plan: PickUp

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : arrived at poi 
     *
     * Plans in State: 				
     *   - Plan - (Name): DriveCloseToObjectDefault, (PlanID): 1520521878834 
     *
     * Tasks: 
     *   - Fetch (1520438413494) (Entrypoint: 1520438315110)
     *
     * States:
     *   - DriveToPickUpPos (1520438315109)
     *   - Grap (1520438338624)
     *   - PickedUp (1520438345249)
     *   - PickUpFail (1520516913557)
     *   - DriveToObjectFail (1520589504282)
     *
     * Vars:
     */
    bool TransitionCondition1520438352890::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1520438351648) ENABLED START*/
        return rp->anyChildrenStatus(PlanStatus::Success);
        /*PROTECTED REGION END*/

    }

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : object position not available 
     *
     * Plans in State: 				
     *   - Plan - (Name): DriveCloseToObjectDefault, (PlanID): 1520521878834 
     *
     * Tasks: 
     *   - Fetch (1520438413494) (Entrypoint: 1520438315110)
     *
     * States:
     *   - DriveToPickUpPos (1520438315109)
     *   - Grap (1520438338624)
     *   - PickedUp (1520438345249)
     *   - PickUpFail (1520516913557)
     *   - DriveToObjectFail (1520589504282)
     *
     * Vars:
     */
    bool TransitionCondition1520589543849::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1520589542298) ENABLED START*/
        return false;
        /*PROTECTED REGION END*/

    }

    //State: Grap in Plan: PickUp

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : successfully picked up object 
     *
     * Plans in State: 				
     *   - Plan - (Name): PickUpDefault, (PlanID): 1520438478153 
     *
     * Tasks: 
     *   - Fetch (1520438413494) (Entrypoint: 1520438315110)
     *
     * States:
     *   - DriveToPickUpPos (1520438315109)
     *   - Grap (1520438338624)
     *   - PickedUp (1520438345249)
     *   - PickUpFail (1520516913557)
     *   - DriveToObjectFail (1520589504282)
     *
     * Vars:
     */
    bool TransitionCondition1520438355739::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1520438354450) ENABLED START*/
        auto currentTask = this->wm->taskManager.getNextTask();
        if (!currentTask || currentTask->getInformation().type != ttb_msgs::ServeTask::PICK_UP)
        {
            // current task is not for driving to an POI, so don't specify any problem descriptor
            return false;
        }
        auto objectName = ttb::TurtleBot::get(this->wm)->simulatedArm->getCarriedObjectName();
        if (objectName.compare(currentTask->getInformation().entity) != 0)
        {
            return false;
        }
        else
        {
            std::cout << "PickUp-Plan: Successfully picked up " << objectName << std::endl;
            this->wm->taskManager.popNextTask();
            return true;
        }
        return rp->anyChildrenStatus(PlanStatus::Success);
        /*PROTECTED REGION END*/

    }

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : Failed to pick up object 
     *
     * Plans in State: 				
     *   - Plan - (Name): PickUpDefault, (PlanID): 1520438478153 
     *
     * Tasks: 
     *   - Fetch (1520438413494) (Entrypoint: 1520438315110)
     *
     * States:
     *   - DriveToPickUpPos (1520438315109)
     *   - Grap (1520438338624)
     *   - PickedUp (1520438345249)
     *   - PickUpFail (1520516913557)
     *   - DriveToObjectFail (1520589504282)
     *
     * Vars:
     */
    bool TransitionCondition1520516954761::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1520516953565) ENABLED START*/
        return rp->anyChildrenStatus(PlanStatus::Failed);
        /*PROTECTED REGION END*/

    }

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : pos not reached 
     *
     * Plans in State: 				
     *   - Plan - (Name): PickUpDefault, (PlanID): 1520438478153 
     *
     * Tasks: 
     *   - Fetch (1520438413494) (Entrypoint: 1520438315110)
     *
     * States:
     *   - DriveToPickUpPos (1520438315109)
     *   - Grap (1520438338624)
     *   - PickedUp (1520438345249)
     *   - PickUpFail (1520516913557)
     *   - DriveToObjectFail (1520589504282)
     *
     * Vars:
     */
    bool TransitionCondition1520518912633::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1520518910440) ENABLED START*/
        //TODO still missing in beh
        return false;
        /*PROTECTED REGION END*/

    }

//State: PickedUp in Plan: PickUp

//State: PickUpFail in Plan: PickUp

//State: DriveToObjectFail in Plan: PickUp

}
