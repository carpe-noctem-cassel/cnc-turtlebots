#include "ConditionCreator.h"
#include "ServiceRobots/Charge1552996829354.h"
#include "ServiceRobots/Serve1552996823626.h"
#include "ServiceRobots/ServeMaster1552995667134.h"

using namespace alicaAutogenerated;
namespace alica
{

ConditionCreator::ConditionCreator() {}
ConditionCreator::~ConditionCreator() {}

std::shared_ptr<BasicCondition> ConditionCreator::createConditions(long conditionConfId)
{
    switch (conditionConfId) {
    case 1552997523219:
        return std::make_shared<PreCondition1552997523219>();
        break;
    case 1552997565145:
        return std::make_shared<PreCondition1552997565145>();
        break;
    case 1552997575777:
        return std::make_shared<PreCondition1552997575777>();
        break;
    case 1552997671153:
        return std::make_shared<PreCondition1552997671153>();
        break;
    case 1552998060293:
        return std::make_shared<PreCondition1552998060293>();
        break;
    case 1552998086675:
        return std::make_shared<PreCondition1552998086675>();
        break;
    case 1552998099101:
        return std::make_shared<PreCondition1552998099101>();
        break;
    case 1552999126699:
        return std::make_shared<PreCondition1552999126699>();
        break;
    case 1552999379581:
        return std::make_shared<PreCondition1552999379581>();
        break;
    case 1552999434614:
        return std::make_shared<PreCondition1552999434614>();
        break;
    default:
        std::cerr << "ConditionCreator: Unknown condition id requested: " << conditionConfId << std::endl;
        throw new std::exception();
        break;
    }
}
} // namespace alica
