#include "ServiceRobots/DriveToPOI1553186299639.h"
/*PROTECTED REGION ID(eph1553186299639) ENABLED START*/
#include <TurtleBot.h>

#include <ttb/TTBWorldModel.h>
#include <ttb/wm/TaskManager.h>
/*PROTECTED REGION END*/

using namespace alica;

namespace alicaAutogenerated
{
// Plan:DriveToPOI
// Check of RuntimeCondition - (Name): 1553249831272, (ConditionString): , (Comment) :

/*
 * Available Vars:
 *	- poi (1553249850610)
 *	- door (1553249844851)
 */
bool RunTimeCondition1553249831272::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1553249831272) ENABLED START*/
    return true;
    /*PROTECTED REGION END*/
}
/* generated comment
    Task: DefaultTask  -> EntryPoint-ID: 1553246730787
*/
shared_ptr<UtilityFunction> UtilityFunction1553186299639::getUtilityFunction(Plan* plan)
{
    /*PROTECTED REGION ID(1553186299639) ENABLED START*/
    std::shared_ptr<UtilityFunction> defaultFunction = std::make_shared<DefaultUtilityFunction>(plan);
    return defaultFunction;
    /*PROTECTED REGION END*/
}
/*
 *
 * Transition:
 *   - Name: 1553249924824, ConditionString: From POI to door: current POI should be reached., Comment : MISSING_COMMENT
 *
 * Plans in State:
 *
 *   - Plan - (Name): DriveToPOI, (PlanID): 1553249791474
 *
 * Tasks:
 *
 *   - DefaultTask (1528875085489) (Entrypoint: 1553246730787)
 *
 * States:
 *
 *   - DriveToPOI (1553246732403)
 *   - OpenDoor (1553246733927)
 *   - AtGoalPOI (1553246736188)
 *   - WasBlocked (1553246738057)
 *
 * Vars:
 */
bool PreCondition1553249924824::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1553247377749) ENABLED START*/
    auto currentTask = this->wm->taskManager.getNextTask();
    if (!currentTask || currentTask->getInformation().type != ttb_msgs::ServeTask::DRIVE_TO) {
        // current task is not for driving to an POI, so don't specify any problem descriptor
        return false;
    }

    auto currentGoalPOI = wm->topologicalModel.getPOI(stoi(currentTask->getInformation().entity));
    if (!currentGoalPOI) {
        // unable to get the goalPOI
        return false;
    }

    return rp->isAnyChildStatus(PlanStatus::Success) && !wm->robot.inSameRoom(currentGoalPOI);
    /*PROTECTED REGION END*/
}
/*
 *
 * Transition:
 *   - Name: 1553249983248, ConditionString: Goal POI reached, Comment : MISSING_COMMENT
 *
 * Plans in State:
 *
 *   - Plan - (Name): DriveToPOI, (PlanID): 1553249791474
 *
 * Tasks:
 *
 *   - DefaultTask (1528875085489) (Entrypoint: 1553246730787)
 *
 * States:
 *
 *   - DriveToPOI (1553246732403)
 *   - OpenDoor (1553246733927)
 *   - AtGoalPOI (1553246736188)
 *   - WasBlocked (1553246738057)
 *
 * Vars:
 */
bool PreCondition1553249983248::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1553249685249) ENABLED START*/
    auto currentTask = this->wm->taskManager.getNextTask();
    if (!currentTask || currentTask->getInformation().type != ttb_msgs::ServeTask::DRIVE_TO) {
        // current task is not for driving to an POI, so don't specify any problem descriptor
        return false;
    }

    auto currentGoalPOI = wm->topologicalModel.getPOI(stoi(currentTask->getInformation().entity));
    if (!currentGoalPOI) {
        // unable to get the goalPOI
        return false;
    }

    if (!this->wm->robot.isCloseTo(currentGoalPOI) || !this->wm->robot.inSameRoom(currentGoalPOI)) {
        return false;
    } else {
        std::cout << "DriveToPOI-Plan: Arrived at goalPOI " << currentGoalPOI->id << std::endl;
        this->wm->taskManager.popNextTask();
        return true;
    }
    /*PROTECTED REGION END*/
}
/*
 *
 * Transition:
 *   - Name: 1553249994733, ConditionString: Unable to get to the goal POI, Comment : MISSING_COMMENT
 *
 * Plans in State:
 *
 *   - Plan - (Name): DriveToPOI, (PlanID): 1553249791474
 *
 * Tasks:
 *
 *   - DefaultTask (1528875085489) (Entrypoint: 1553246730787)
 *
 * States:
 *
 *   - DriveToPOI (1553246732403)
 *   - OpenDoor (1553246733927)
 *   - AtGoalPOI (1553246736188)
 *   - WasBlocked (1553246738057)
 *
 * Vars:
 */
bool PreCondition1553249994733::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1553249715180) ENABLED START*/
    return rp->isAnyChildStatus(PlanStatus::Failed);
    /*PROTECTED REGION END*/
}
/*
 *
 * Transition:
 *   - Name: 1553250009834, ConditionString: Unable to open some door!, Comment : MISSING_COMMENT
 *
 * Plans in State:
 *
 *   - Plan - (Name): OpenDoor, (PlanID): 1553249804320
 *
 * Tasks:
 *
 *   - DefaultTask (1528875085489) (Entrypoint: 1553246730787)
 *
 * States:
 *
 *   - DriveToPOI (1553246732403)
 *   - OpenDoor (1553246733927)
 *   - AtGoalPOI (1553246736188)
 *   - WasBlocked (1553246738057)
 *
 * Vars:
 */
bool PreCondition1553250009834::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1553249711754) ENABLED START*/
    return rp->isAnyChildStatus(PlanStatus::Success);
    /*PROTECTED REGION END*/
}
/*
 *
 * Transition:
 *   - Name: 1553249888743, ConditionString: From Door to POI state: Door should be open now., Comment : MISSING_COMMENT
 *
 * Plans in State:
 *
 *   - Plan - (Name): OpenDoor, (PlanID): 1553249804320
 *
 * Tasks:
 *
 *   - DefaultTask (1528875085489) (Entrypoint: 1553246730787)
 *
 * States:
 *
 *   - DriveToPOI (1553246732403)
 *   - OpenDoor (1553246733927)
 *   - AtGoalPOI (1553246736188)
 *   - WasBlocked (1553246738057)
 *
 * Vars:
 */
bool PreCondition1553249888743::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1553249723948) ENABLED START*/
    return rp->isAnyChildStatus(PlanStatus::Failed);
    /*PROTECTED REGION END*/
}
} // namespace alicaAutogenerated
