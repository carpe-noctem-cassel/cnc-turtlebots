<launch>

  <arg name="includes" default="$(find turtle_bringup)/launch/includes" />
  <arg name="nodelet_manager_name" default="mobile_base_nodelet_manager" />
  <arg name="scan_topic" default="/scan" />
  <arg name="world" default="$(find turtle_simulator)/worlds/navigation_training1.world" />

  <param name="use_sim_time" value="true" />


  <!-- setup the frames -->
  <param name="laser_frame" value="camera_depth_frame" />
  <param name="odometry_frame" value="odom" />
  <param name="offset_frame" value="offset" />
  <param name="map_frame" value="map" />
  <param name="robot_frame" value="base_footprint" />

  <!-- setup public topics -->
  <param name="map_topic" value="map" />
  <param name="laser_topic" value="scan" />

  <!-- setup public services -->
  <param name="map_service" value="static_map" />

  <!-- start with the turtle basics here -->

  <!-- start Gazebo with an empty world -->
  <include file="$(arg includes)/gazebo.launch.xml" >
    <arg name="world" value="$(arg world)" />
    <arg name="gui" value="true" />
  </include>

  <!-- Loads up the Turtlebot Description for the Gazebo Simulator -->
  <include file="$(arg includes)/robot.launch.xml" />

  <!-- Start up the Nodelet Manager -->
  <include file="$(arg includes)/mobile_base.launch.xml" >
    <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)" />
  </include>

  <!-- Start the Kobuki Base -->
  <include file="$(arg includes)/kobuki_node.launch.xml" />

  <!-- Start the Diagnostic Aggregator -->
  <include file="$(arg includes)/diagnostic_aggregator.launch.xml" />

  <!-- Start the Laserscanner (Fake node) -->
  <include file="$(arg includes)/depthimage_to_laserscan.launch.xml" >
    <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)" />
    <arg name="scan_topic_remap" value="$(arg scan_topic)" />
  </include>

  <!-- Start up the Statepublisher for right tf building -->
  <include file="$(arg includes)/state_publisher.launch.xml" />


  <!-- Start up the move nodes -->

  <!-- Velocity Muxer -->
  <include file="$(arg includes)/cmd_vel_mux.launch.xml" />

  <!-- Safetycontroller -->
  <include file="$(arg includes)/safety_controller.launch.xml" />

  <!-- Velocity Smoother-->
  <include file="$(arg includes)/velocity_smoother.launch.xml" />


  <!-- nav2d stuff -->

  <!-- Start the Operator to control the simulated robot -->
  <node name="Operator" pkg="nav2d_operator" type="operator" >
    <remap from="scan" to="$(arg scan_topic)"/>
    <remap from="cmd_vel" to="cmd_vel_mux/navigation" />
    <rosparam file="$(find turtle_bringup)/param/nav2d/operator.yaml"/>
    <rosparam file="$(find turtle_bringup)/param/nav2d/costmap.yaml" ns="local_map" />
  </node>

  <!-- Start Mapper to genreate map from laser scans -->
  <node name="Mapper" pkg="nav2d_karto" type="mapper">
    <remap from="scan" to="$(arg scan_topic)"/>
    <rosparam file="$(find turtle_bringup)/param/nav2d/mapper.yaml"/>
  </node>

  <!-- Start the Navigator to move the robot autonomously -->
  <node name="Navigator" pkg="nav2d_navigator" type="navigator">
    <rosparam file="$(find turtle_bringup)/param/nav2d/navigator.yaml"/>
  </node>

  <node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
  <node name="Explore" pkg="nav2d_navigator" type="explore_client" />
  <node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

  <!-- RVIZ to view the visualization -->
  <node name="RVIZ" pkg="rviz" type="rviz" args=" -d $(find turtle_bringup)/param/nav2d/tutorial3.rviz" />

</launch>
